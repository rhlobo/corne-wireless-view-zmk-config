// CRIAR COLUNAS EXTRAS
//  - ADAPTAR COMBOS


#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>         // Bluetooth Command Defines
#include <dt-bindings/zmk/keys.h>       // Keycode Defines
#include <dt-bindings/zmk/mouse.h>      // Mouse Emulation Defines
#include <dt-bindings/zmk/ext_power.h>  // Power Management Behaviors


// REFER TO LAYERS ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
// When working with layers, you may have several different key positions with bindings that enable/disable those layers.
// To make it easier to refer to those layers in your key bindings, and to change which layers are where later, you can
// add a set of #defines at the top of your keymap file, and use those layer in your keymap.
#define LDEF 0
#define LNAV 1
#define LSYM 2
#define LNUM 3
#define LSYS 4


// MOUSE CONFIGS
// Mouse movement: Configurable acceleration profile with three parameters:
// - delay before movement
// - time to max speed
// - acceleration exponent: The exponent is usually set to:
//   - 0 for constant speed
//   - 1 for uniform acceleration
//   - 2 for uniform jerk
&mmv {
    delay-ms = <0>;
    time-to-max-speed-ms = <300>;
    acceleration-exponent=<1>;
};

// Scrolling: Configurable acceleration profile with three parameters:
// - delay before movement
// - time to max speed
// - acceleration exponent: The exponent is usually set to:
//   - 0 for constant speed
//   - 1 for uniform acceleration
//   - 2 for uniform jerk
&mwh {
    delay-ms = <0>;
    time-to-max-speed-ms = <300>;
    acceleration-exponent=<0>;
};


/ {
    combos {
        compatible = "zmk,combos";
        //     -------------------------------------------------------------     -------------------------------------------------------------
        //  0  |     1     |     2     |     3     |     4     |     5     |     |     6     |     7     |     8     |     9     |    10     |  11
        // 12  |    13     |    14     |    15     |    16     |    17     |     |    18     |    19     |    20     |    21     |    22     |  23
        // 24  |    25     |    26     |    27     |    28     |    29     |     |    30     |    31     |    32     |    33     |    34     |  35
        //     ------------------------|    36     |    37     |    38     |     |    39     |    40     |    41     |------------------------
        //                            -------------------------------------     -------------------------------------

        // STICKY LAYERS COMBO
        combo_LNUM {
            timeout-ms = <75>;
            key-positions = <41 38>;
            bindings = <&to LNUM>;
        };
        combo_LNAV {
            timeout-ms = <75>;
            key-positions = <41 39>;
            bindings = <&to LNAV>;
        };
        combo_LSYM {
            timeout-ms = <75>;
            key-positions = <41 40>;
            bindings = <&to LSYM>;
        };
        combo_LSYS {
            timeout-ms = <75>;
            key-positions = <36 41>;
            bindings = <&to LSYS>;
        };

        // combo_COLON {
        //     timeout-ms = <50>;
        //     key-positions = <32 34>;
        //     bindings = <&kp COLON>;
        //     layers = <LDEF LSYM LNAV>;
        // };
        // combo_SEMI {
        //     timeout-ms = <50>;
        //     key-positions = <33 34>;
        //     bindings = <&kp SEMI>;
        //     layers = <LDEF LSYM LNAV>;
        // };
        combo_MOUSE_CLICK_LEFT {
            timeout-ms = <50>;
            key-positions = <31 32>;
            bindings = <&mkp LCLK>;
            layers = <LNAV>;
        };
        combo_MOUSE_CLICK_MIDDLE {
            timeout-ms = <50>;
            key-positions = <31 32 33>;
            bindings = <&mkp MCLK>;
            layers = <LNAV>;
        };
        combo_MOUSE_CLICK_RIGHT {
            timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&mkp RCLK>;
            layers = <LNAV>;
        };
        combo_BT_CRL {
            timeout-ms = <50>;
            key-positions = <13 14 15 16>;
            bindings = <&bt BT_CLR>;
            layers = <LSYS>;
        };
        // combo_RESET_LEFT {
        //     timeout-ms = <50>;
        //     key-positions = <36 37 38>;
        //     bindings = <&sys_reset>;
        //     layers = <LSYS>;
        // };
        // combo_BOOTLOADER_LEFT {
        //     timeout-ms = <50>;
        //     key-positions = <1 2 36>;
        //     bindings = <&bootloader>;
        // };
        // combo_RESET_RIGHT {
        //     timeout-ms = <50>;
        //     key-positions = <39 40 41>;
        //     bindings = <&sys_reset>;
        //     layers = <LSYS>;
        // };
        // combo_BOOTLOADER_RIGHT {
        //     timeout-ms = <50>;
        //     key-positions = <9 10 41>;
        //     bindings = <&bootloader>;
        // };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <75>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
            // tapping-term-ms = <200>;
            // quick-tap-ms = <50>
            // require-prior-idle-ms = <150>;
            // flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        tmt: thumb_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_MOD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            // quick-tap-ms = <50>;
            //reqtuire-prior-idle-ms = <100>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };
        tlt: thumb_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_LAYER_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <100>;
            require-prior-idle-ms = <100>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;
        };
        cht: custom_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "CUSTOM_HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <50>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        // scroll_ht: scroll_hold_tap {
        //     compatible = "zmk,behavior-hold-tap";
        //     label = "SCROLL_HOLD_TAP";
        //     #binding-cells = <2>;
        //     tapping-term-ms = <200>;
        //     require-prior-idle-ms = <100>;
        //     // quick-tap-ms = <75>;
        //     flavor = "hold-preferred";
        //     bindings = <&mwh>, <&kp>;
        // };
        ccaps_dance: control_caps_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPS_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp RCTRL>, <&caps_word>;
        };

        // tap: BACKSPACE | SHIFT + tap: DELETE
        bspc_del_nav: bspc_del_nav {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE_NAV";
            #binding-cells = <0>;
            bindings = <&tlt LNAV BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        // Morphs LSHIFT + EQUAL: F4
        equal_f2_f4: equal_f2_f4 {
            compatible = "zmk,behavior-mod-morph";
            label = "EQUAL_F2_F4";
            #binding-cells = <0>;
            bindings = <&cht F2 EQUAL>, <&kp F4>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        // Morphs LSHIFT + DOT: COLON
        dot_colon: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_COLON";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        // Morphs LSHIFT + COMA: SEMI
        coma_semi: coma_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "COMA_SEMI";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };
    };


    keymap {
        compatible = "zmk,keymap";

//       -------------------------------------------------------------     -------------------------------------------------------------
//       |     Q     |     W     |     E     |     R     |     T     |     |     Y     |     U     |     I     |     O     |     P     |
//       |     A     |     S     |     D     |     F     |     G     |     |     H     |     J     |     K     |     L     |    ' "    |
//       |     Z     |     X     |     C     |     V     |     B     |     |     N     |     M     |    = F2   |    , ;    |    . :    |
//       ------------------------|   CAPSW   |   ENTER   |    ESC    |     |    BSPC   |   SPACE   |    TAB    |------------------------
//                               -------------------------------------     -------------------------------------
        default_layer {
            label = "Base";
            bindings = <
&trans       &kp Q       &kp W       &kp E       &kp R       &kp T             &kp Y        &kp U      &kp I        &kp O      &kp P                &trans
&trans       &kp A       &hm LALT S  &hm LCMD D &hm LSHIFT F &hm LCTRL G     &hm LCTRL H &hm LSHIFT J &hm LCMD K   &hm LALT L   &cht DQT SQT         &trans
&trans       &kp Z       &kp X       &kp C       &kp V       &kp B             &kp N        &kp M    &equal_f2_f4 &coma_semi   &dot_colon           &trans
                    &tlt LSYS TAB    &tmt LSHFT ENTER    &tlt LNUM ESC       &bspc_del_nav   &tlt LSYM SPACE     &ccaps_dance
            >;
        };


//       -------------------------------------------------------------     -------------------------------------------------------------
//       |           |           |           |           |           |     |    HOME   |    PgDn   |    PgUp   |    END    |     ≣     |
//       |           |           |           |           |           |     |    LEFT   |    DOWN   |     UP    |   RIGHT   | SCROLL UP |
//       |    UNDO   |    CUT    |    COPY   |   PASTE   |    REDO   |     |  M. LEFT  |  M. DOWN  |    M. UP  | M. RIGHT  | SCROLL DW |
//       ------------------------|           |           |           |     |███████████|           |           |------------------------
//                               -------------------------------------     -------------------------------------
        nav_layer {
            label = "Move";
            bindings = <
&trans      &trans      &trans      &trans      &trans       &trans           &kp HOME    &kp PG_DN    &kp PG_UP   &kp END         &kp  K_CMENU         &trans
&trans      &trans      &trans      &trans      &trans       &trans           &kp LEFT    &kp DOWN       &kp UP    &kp RIGHT       &mwh SCROLL_UP      &trans
&trans      &kp LC(Z)   &kp LC(X)   &kp LC(C)   &kp LC(V)    &kp LC(Y)     &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT &mwh SCROLL_DOWN    &trans
                                    &trans      &trans       &trans           &trans      &trans      &to LDEF
            >;
        };

//       TODO: Go back to earlier backup or remove right attributions (replace with &trans)
//       -------------------------------------------------------------     -------------------------------------------------------------
//       |    ^ `    |     !     |     @     |     #     |     $     |     |           |           |           |     *     |    / \    |
//       |     ~     |     ?     |     _     |    ( )    |    [ ]    |     |           |           |           |     +     |     -     |
//       |     &     |     |     |     %     |    < >    |    { }    |     |           |           |           |           |           |
//       ------------------------|           |           |           |     |           |███████████|           |------------------------
//                               -------------------------------------     -------------------------------------
        symbol_layer {
            label = "Symbol";
            bindings = <
&trans  &cht CARET GRAVE &kp EXCL  &kp AT      &kp HASH    &kp DOLLAR         &trans      &trans      &trans      &kp ASTRK  &cht BSLH KP_SLASH   &trans
&trans    &kp TILDE     &kp QMARK &kp UNDER &cht RPAR LPAR &cht RBKT LBKT     &trans      &trans      &trans      &kp PLUS   &kp MINUS            &trans
&trans    &kp AMPS    &kp PIPE    &kp PRCNT   &cht GT LT   &cht RBRC LBRC     &trans      &trans      &trans      &trans     &trans               &trans
                                    &trans       &trans       &trans          &trans      &trans      &to LDEF
            >;
        };

//       -------------------------------------------------------------     -------------------------------------------------------------
//       |           |           |           |           |           |     |     7     |     8     |     9     |     *     |    / \    |
//       |           |           |           |           |           |     |     4     |     5     |     6     |     +     |     -     |
//       |           |           |           |           |           |     |     1     |     2     |     3     |           |           |
//       ------------------------|           |           |███████████|     |     0     |           |           |------------------------
//                               -------------------------------------     -------------------------------------
        numerical_layer {
            label = "Numeric";
            bindings = <
&trans      &trans      &trans      &trans      &trans       &trans      &kp N7      &kp N8      &kp N9    &kp ASTRK  &cht BSLH SLASH         &trans
&trans      &trans      &trans      &trans      &trans       &trans      &kp N4      &kp N5      &kp N6    &kp PLUS   &kp MINUS              &trans
&trans      &trans      &trans      &trans      &trans       &trans      &kp N1      &kp N2      &kp N3    &trans     &trans                 &trans
                                 &trans       &trans       &trans          &kp N0     &trans      &to LDEF
            >;
        };


//       -------------------------------------------------------------     -------------------------------------------------------------
//       |     F1    |     F2    |     F4    |     F5    |  SCRLOCK  |     |▒▒▒▒▒▒▒▒▒▒▒|   B.DOWN  |    B.UP   |▒▒▒▒▒▒▒▒▒▒▒| EXT.POWER |
//       |    BT1    |    BT2    |    BT3    |    BT4    |    BT5    |     |    PREV   |    PLAY   |    NEXT   |    RW     |    FF     |
//       |     F8    |    F10    |    F11    |    F12    |   PSCRN   |     |    MUTE   |   V.DOWN  |    V.UP   |▒▒▒▒▒▒▒▒▒▒▒|▒▒▒▒▒▒▒▒▒▒▒|
//       ------------------------|           |           |           |     |           |           |           |------------------------
//                               -------------------------------------     -------------------------------------
        system_layer {
            label = "System";
            bindings = <
&trans     &kp F1      &kp F2      &kp F4       &kp F5      &kp SLCK          &none      &kp C_BRI_DN &kp C_BRI_UP &none     &ext_power EP_TOG      &trans
&trans  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4      &kp C_PREV &kp C_PP     &kp C_NEXT   &kp C_RW  &kp C_FF               &trans
&trans     &kp F8      &kp F10     &kp F11      &kp F12     &kp PSCRN         &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &none     &none                  &trans
                                   &trans       &trans      &trans            &trans     &trans       &to LDEF
            >;
        };

    };
};
