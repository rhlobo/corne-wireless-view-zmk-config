#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>         // Bluetooth Command Defines
#include <dt-bindings/zmk/keys.h>       // Keycode Defines
#include <dt-bindings/zmk/ext_power.h>  // Power Management Behaviors
#include "mouse_old.dtsi"               // Mouse Emulation Utilities
#include "combos.dtsi"                   // Combo Key Utilities


// REFER TO LAYERS ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
// When working with layers, you may have several different key positions with bindings that enable/disable those layers.
// To make it easier to refer to those layers in your key bindings, and to change which layers are where later, you can
// add a set of #defines at the top of your keymap file, and use those layer in your keymap.
#define LDEF 0
#define LNAV 1
#define LSYM 2
#define LNUM 3
#define LSYS 4


/ {
    // ###############################################################################################################################
    // COMBOS ########################################################################################################################
    // ###############################################################################################################################
    combos {
        compatible = "zmk,combos";
//     -------------------------------------------------------------     -------------------------------------------------------------
//     |    KL15   |    KL14   |    KL13   |    KL12   |    KL11   |     |    KR11   |    KR12   |    KR13   |    KR14   |   KR15    |
//     |    KL25   |    KL24   |    KL23   |    KL22   |    KL21   |     |    KR21   |    KR22   |    KR23   |    KR24   |   KR25    |
//     |    KL35   |    KL34   |    KL33   |    KL32   |    KL31   |     |    KR31   |    KR32   |    KR33   |    KR34   |   KR35    |
//     ------------------------|    KL43   |    KL42   |    KL41   |     |    KR41   |    KR42   |    KR43   |------------------------
//                            -------------------------------------     -------------------------------------

        // STICKY LAYERS COMBO ########################################################################################################
        // Sticks NUMERIC LAYER ON
        combo_LNUM {
            timeout-ms = <75>;
            key-positions = <KL43 KL41>;
            bindings = <&to LNUM>;
        };
        // Sticks NAVIGATION LAYER ON
        combo_LNAV {
            timeout-ms = <75>;
            key-positions = <KL43 KR41>;
            bindings = <&to LNAV>;
        };
        // Sticks SYMBOL LAYER ON
        combo_LSYM {
            timeout-ms = <75>;
            key-positions = <KL43 KR42>;
            bindings = <&to LSYM>;
        };
        // Sticks SYSTEM LAYER ON
        combo_LSYS {
            timeout-ms = <75>;
            key-positions = <KL43 KR43>;
            bindings = <&to LSYS>;
        };

        // MOUSE COMBOS ##############################################################################################################
        combo_MOUSECLICK {
            timeout-ms = <75>;
            key-positions = <KR32 KR33 KR34>;
            bindings = <&mkp LCLK>;
        };

        // STICKY MODS COMBOS ########################################################################################################
        // Sticks CAPSLOCK ON
        combo_CAPS {
            timeout-ms = <75>;
            key-positions = <KL43 KL42>;
            bindings = <&kp CAPSLOCK>;
        };

        // MISCELLANEOUS COMBOS #######################################################################################################
        // Clears current BT pairing
        combo_BT_CRL {
            timeout-ms = <50>;
            key-positions = <KL25 KL24 KL23 KL22>;
            bindings = <&bt BT_CLR>;
            layers = <LSYS>;
        };

        // NVIM save and quit combo
        combo_NVIM_SAVEQUIT {
            timeout-ms = <75>;
            key-positions = <KL15 KL14>;
            bindings = <&nvim_savequit>;
            layers = <LNUM>;
        };

        // CCEDIL xpsarch combo (keymap workaround using RALT+, c)
        combo_CCDEIL {
            timeout-ms = <75>;
            key-positions = <KR25 KL33>;
            bindings = <&ccedil_xpsarch_macro>;
            layers = <LDEF>;
        };
    };

    // ###############################################################################################################################
    // BEHAVIORS #####################################################################################################################
    // ###############################################################################################################################
    behaviors {
        // Hold for HomeRow Mods and Tap for Keys
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <100>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        // Slow Hold for HomeRow Mods and Tap for Keys
        shm: slow_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "SLOW_HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <250>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        // Thumb Hold for Mods and Taps for Keys
        tmt: thumb_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_MOD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };

        // Thumb Hold for Layers and Tap for Keys
        tlt: thumb_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_LAYER_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <75>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;
        };

        // Custom Hold and Tap Behavior
        cht: custom_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "CUSTOM_HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <100>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        // tap: BACKSPACE | RSHIFT + tap: DELETE
        bspc_del_nav: bspc_del_nav {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE_NAV";
            #binding-cells = <0>;
            bindings = <&tlt LNAV BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_RSFT)>;
        };

        // Morphs LSHIFT + EQUAL into F4
        equal_f2_f4: equal_f2_f4 {
            compatible = "zmk,behavior-mod-morph";
            label = "EQUAL_F2_F4";
            #binding-cells = <0>;
            bindings = <&cht F2 EQUAL>, <&kp F4>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        // Morphs LSHIFT + DOT into COLON
        dot_colon: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_COLON";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        // Morphs LSHIFT + COMA into SEMI
        coma_semi: coma_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "COMA_SEMI";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };
    };

    // ###############################################################################################################################
    // MACROS ########################################################################################################################
    // ###############################################################################################################################
    macros {
        // Macro: ESC :w ENTER
        nvim_save: nvim_save {
            label = "nvim_save";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <40>;
            bindings = <&macro_tap &kp ESC &kp COLON &kp W &kp ENTER>;
        };

        // Macro: ESC :q! ENTER
        nvim_quit: nvim_quit {
            label = "nvim_quit";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <40>;
            bindings = <&macro_tap &kp ESC &kp COLON &kp Q &kp EXCLAMATION &kp ENTER>;
        };

        // Macro: ESC :wq ENTER
        nvim_savequit: nvim_savequit {
            label = "nvim_savequit";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <40>;
            bindings = <&macro_tap &kp ESC &kp COLON &kp W &kp Q &kp ENTER>;
        };

        // Macro: RALT+, c (CCEDIL in xpsarch keymap workaround)
        ccedil_xpsarch_macro: ccedil_xpsarch_macro {
            label = "ccedil_xpsarch_macro";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <40>;
            bindings = <&macro_tap &kp RA(COMMA) &kp C>;
        };
    };

    // ###############################################################################################################################
    // KEYMAP ########################################################################################################################
    // ###############################################################################################################################
    keymap {
        compatible = "zmk,keymap";


//       -------------------------------------------------------------     -------------------------------------------------------------
//       |     Q     |     W     |     E     |     R     |     T     |     |     Y     |     U     |     I     |     O     |     P     |
//       |     A     |     S     |     D     |     F     |     G     |     |     H     |     J     |     K     |     L     |    ' "    |
//       |     Z     |     X     |     C     |     V     |     B     |     |     N     |     M     |    = F2   |    , ;    |    . :    |
//       ------------------------|    TAB    |   ENTER   |    ESC    |     |    BSPC   |   SPACE   |   CAPSW   |------------------------
//                               -------------------------------------     -------------------------------------
        default_layer {
            label = "Base";
            bindings = <
&trans       &kp Q       &kp W       &kp E       &kp R       &kp T             &kp Y        &kp U      &kp I        &kp O       &kp P                &trans
&trans       &kp A       &shm LALT S &hm LCMD D  &hm LCTRL F &hm LSHIFT G     &hm RSHIFT H &hm LCTRL J &hm LCMD K   &shm LALT L &kp SQT              &trans
&trans       &kp Z       &kp X       &kp C       &kp V       &kp B             &kp N        &kp M    &equal_f2_f4 &coma_semi    &dot_colon           &trans
                        &kp TAB    &tmt LSHFT ENTER    &tlt LNUM ESC       &bspc_del_nav   &tlt LSYM SPACE     &tlt LSYS RCTRL
            >;
        };


//       -------------------------------------------------------------     -------------------------------------------------------------
//       |   WIN+S   | SCLL LEFT | SCLL DOWN |  SCLL UP  | SCLL RGHT |     |    HOME   |    PgDn   |    PgUp   |    END    |     ≣     |
//       |  ALT+TAB  |           |           |           |           |     |    LEFT   |    DOWN   |     UP    |   RIGHT   |   ENTER   |
//       |    UNDO   |    CUT    |    COPY   |   PASTE   |    REDO   |     |   M LEFT  |   M DOWN  |    M UP   |  M RIGHT  |  R CLICK  |
//       ------------------------|           |           |           |     |███████████|           |           |------------------------
//                               -------------------------------------     -------------------------------------
        nav_layer {
            label = "Move";
            bindings = <
&trans    &kp LG(S) &mwh SCROLL_LEFT &mwh SCROLL_DOWN &mwh SCROLL_UP &mwh SCROLL_RIGHT           &kp HOME    &kp PG_DN    &kp PG_UP   &kp END         &kp K_CMENU      &trans
&trans    &kp LA(TAB) &trans      &trans      &trans       &trans            &kp LEFT    &kp DOWN       &kp UP    &kp RIGHT       &kp ENTER        &trans
&trans    &kp LC(Z)   &kp LC(X)   &kp LC(C)   &kp LC(V)    &kp LC(Y)     &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT &mkp RCLK      &trans
                                    &trans      &trans       &trans           &trans      &trans      &to LDEF
            >;
        };
//         nav_layer {
//             label = "Move";
//             bindings = <
// &trans      &kp LG(S)   &U_WH_L     &U_WH_D     &U_WH_U      &U_WH_R           &kp HOME    &kp PG_DN    &kp PG_UP   &kp END         &kp K_CMENU      &trans
// &trans      &kp LA(TAB) &trans      &trans      &trans       &trans            &kp LEFT    &kp DOWN       &kp UP    &kp RIGHT       &kp ENTER        &trans
// &trans      &kp LC(Z)   &kp LC(X)   &kp LC(C)   &kp LC(V)    &kp LC(Y)     &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT &mkp RCLK      &trans
//                                     &trans      &trans       &trans           &trans      &trans      &to LDEF
//             >;
//         };


//       -------------------------------------------------------------     -------------------------------------------------------------
//       |    ` ^    |     !     |     @     |     #     |     $     |     |           |           |           |     *     |    / \    |
//       |     ~     |     ?     |     _     |    ( )    |    [ ]    |     |           |           |           |     +     |     -     |
//       |     &     |     %     |     |     |    < >    |    { }    |     |           |           |           |           |           |
//       ------------------------|           |           |           |     |           |███████████|           |------------------------
//                               -------------------------------------     -------------------------------------
        symbol_layer {
            label = "Symbol";
            bindings = <
&trans  &cht GRAVE CARET &kp EXCL  &kp AT      &kp HASH    &kp DOLLAR         &trans      &trans      &trans      &kp ASTRK   &cht BSLH KP_SLASH   &trans
&trans    &kp TILDE     &kp QMARK &kp UNDER &cht RPAR LPAR &cht RBKT LBKT     &trans      &trans      &trans      &kp KP_PLUS &kp MINUS            &trans
&trans    &kp AMPS      &kp PRCNT  &kp PIPE   &cht GT LT   &cht RBRC LBRC     &trans      &trans      &trans      &trans      &trans               &trans
                                    &trans       &trans       &trans          &trans      &trans      &to LDEF
            >;
        };

//       -------------------------------------------------------------     -------------------------------------------------------------
//       |  ESC :q!  |  ESC :w   |           |           |           |     |     7     |     8     |     9     |     *     |    / \    |
//       |           |           |           |           |           |     |     4     |     5     |     6     |     +     |     -     |
//       |           |           |           |           |           |     |     1     |     2     |     3     |           |           |
//       ------------------------|           |           |███████████|     |     0     |           |           |------------------------
//                               -------------------------------------     -------------------------------------
        numerical_layer {
            label = "Numeric";
            bindings = <
&trans      &nvim_quit  &nvim_save  &trans      &trans       &trans      &kp N7      &kp N8      &kp N9    &kp ASTRK  &cht BSLH SLASH         &trans
&trans      &trans      &trans      &trans      &trans       &trans      &kp N4      &kp N5      &kp N6    &kp PLUS   &kp MINUS              &trans
&trans      &trans      &trans      &trans      &trans       &trans      &kp N1      &kp N2      &kp N3    &trans     &trans                 &trans
                                 &trans       &trans       &trans          &kp N0     &trans      &to LDEF
            >;
        };


//       -------------------------------------------------------------     -------------------------------------------------------------
//       |     F1    |     F2    |     F4    |     F5    |  SCRLOCK  |     |    B.UP   |    V.UP   |    NEXT   |    FF     |CTL+ALT+DEL|
//       |    BT1    |    BT2    |    BT3    |    BT4    |    BT5    |     |   B.DOWN  |   V.DOWN  |    PREV   |    RW     |CTL+SHT+ESC|
//       |     F8    |    F10    |    F11    |    F12    |   PSCRN   |     |▒▒▒▒▒▒▒▒▒▒▒|    MUTE   |    PLAY   |▒▒▒▒▒▒▒▒▒▒▒| EXT.POWER |
//       ------------------------|           |           |           |     |           |           |███████████|------------------------
//                               -------------------------------------     ------------------------------------
        system_layer {
            label = "System";
            bindings = <
&trans     &kp F1      &kp F2      &kp F4       &kp F5      &kp SLCK          &kp C_BRI_UP  &kp C_VOL_UP  &kp C_NEXT  &kp C_FF   &kp LC(LA(DEL))     &trans
&trans  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4      &kp C_BRI_DN  &kp C_VOL_DN  &kp C_PREV  &kp C_RW   &kp LC(LS(ESC))     &trans
&trans     &kp F8      &kp F10     &kp F11      &kp F12     &kp PSCRN         &none         &kp C_MUTE    &kp C_PP    &none      &ext_power EP_TOG   &trans
                                   &trans       &trans      &trans            &trans     &trans       &to LDEF
            >;
        };

    };
};
